import React, { useState } from 'react';
import { RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, Legend } from 'recharts';
import commonStyles from '../styles/commonStyles';

const CoffeeBeanCharacteristics = ({ onBack }) => {
  const [selectedCoffee, setSelectedCoffee] = useState(null);
  const [selectedRegion, setSelectedRegion] = useState('all');

  const regions = [
    { id: 'all', name: '„Åô„Åπ„Å¶„ÅÆÂú∞Âüü' },
    { id: 'america', name: '‰∏≠ÂçóÁ±≥' },
    { id: 'africa', name: '„Ç¢„Éï„É™„Ç´' },
    { id: 'asia', name: '„Ç¢„Ç∏„Ç¢' },
    { id: 'others', name: '„Åù„ÅÆ‰ªñ' }
  ];

  const coffeeData = [
    {
      name: "„Éñ„É©„Ç∏„É´ „Çµ„É≥„Éà„Çπ",
      region: "america",
      country: "„Éñ„É©„Ç∏„É´",
      altitude: "800-1,200m",
      harvest: "5Êúà-9Êúà",
      characteristics: {
        „Ç≥„ÇØ: 7,
        Ëã¶Âë≥: 5,
        ÈÖ∏Âë≥: 3,
        È¶ô„Çä: 6,
        Áîò„Åø: 7
      },
      description: "Êüî„Çâ„Åã„Å™ÈÖ∏Âë≥„Å®Áîò„Åø„ÅåÁâπÂæ¥„Åß„ÄÅÈ£≤„Åø„ÇÑ„Åô„ÅÑ„Ç≥„Éº„Éí„Éº„Å®„Åó„Å¶Ë¶™„Åó„Åæ„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ",
      flavor_notes: ["„Éä„ÉÉ„ÉÑ", "„ÉÅ„Éß„Ç≥„É¨„Éº„Éà", "„Ç≠„É£„É©„É°„É´"],
      processing: "„Éä„ÉÅ„É•„É©„É´ / „Éë„É´„Éó„Éâ„Éä„ÉÅ„É•„É©„É´",
      icon: "üáßüá∑"
    },
    {
      name: "„Ç∞„Ç¢„ÉÜ„Éû„É© „Ç¢„É≥„ÉÜ„Ç£„Ç∞„Ç¢",
      region: "america",
      country: "„Ç∞„Ç¢„ÉÜ„Éû„É©",
      altitude: "1,500-1,700m",
      harvest: "12Êúà-3Êúà",
      characteristics: {
        „Ç≥„ÇØ: 8,
        Ëã¶Âë≥: 6,
        ÈÖ∏Âë≥: 4,
        È¶ô„Çä: 7,
        Áîò„Åø: 6
      },
      description: "ÁÅ´Â±±ÊÄß„ÅÆÂúüÂ£å„ÅßËÇ≤„Å§„Åü„ÇÅ„ÄÅ„Çπ„Éë„Ç§„Ç∑„Éº„Åß„ÉÅ„Éß„Ç≥„É¨„Éº„Éà„ÅÆ„Çà„ÅÜ„Å™È¢®Âë≥„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„ÉÅ„Éß„Ç≥„É¨„Éº„Éà", "„Çπ„Éë„Ç§„Çπ", "„Ç∑„Éà„É©„Çπ"],
      processing: "„Ç¶„Ç©„ÉÉ„Ç∑„É•„Éâ",
      icon: "üá¨üáπ"
    },
    {
      name: "„Ç®„ÉÅ„Ç™„Éî„Ç¢ „Ç§„É´„Ç¨„ÉÅ„Çß„Éï„Çß",
      region: "africa",
      country: "„Ç®„ÉÅ„Ç™„Éî„Ç¢",
      altitude: "1,800-2,200m",
      harvest: "10Êúà-12Êúà",
      characteristics: {
        „Ç≥„ÇØ: 5,
        Ëã¶Âë≥: 3,
        ÈÖ∏Âë≥: 8,
        È¶ô„Çä: 9,
        Áîò„Åø: 7
      },
      description: "„Ç∏„É£„Çπ„Éü„É≥„ÇÑ„Éô„É™„Éº„ÅÆ„Çà„ÅÜ„Å™„Éï„É≠„Éº„É©„É´„Å™È¶ô„Çä„Å®Êòé„Çã„ÅÑÈÖ∏Âë≥„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„Ç∏„É£„Çπ„Éü„É≥", "„Éô„É™„Éº", "ÊüëÊ©ò"],
      processing: "„Ç¶„Ç©„ÉÉ„Ç∑„É•„Éâ",
      icon: "üá™üáπ"
    },
    {
      name: "„Ç≥„É≠„É≥„Éì„Ç¢ „Çπ„Éó„É¨„É¢",
      region: "america",
      country: "„Ç≥„É≠„É≥„Éì„Ç¢",
      altitude: "1,200-2,000m",
      harvest: "4Êúà-6Êúà",
      characteristics: {
        „Ç≥„ÇØ: 7,
        Ëã¶Âë≥: 5,
        ÈÖ∏Âë≥: 6,
        È¶ô„Çä: 7,
        Áîò„Åø: 6
      },
      description: "„Éê„É©„É≥„Çπ„ÅÆÂèñ„Çå„ÅüÂë≥„Çè„ÅÑ„Å®„ÄÅ„Ç´„É©„É°„É´„ÅÆ„Çà„ÅÜ„Å™Áîò„Åø„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„Ç´„É©„É°„É´", "„É¨„ÉÉ„Éâ„Éï„É´„Éº„ÉÑ", "„Éä„ÉÉ„ÉÑ"],
      processing: "„Ç¶„Ç©„ÉÉ„Ç∑„É•„Éâ",
      icon: "üá®üá¥"
    },
    {
      name: "„Ç±„Éã„Ç¢ AA",
      region: "africa",
      country: "„Ç±„Éã„Ç¢",
      altitude: "1,700-2,000m",
      harvest: "11Êúà-12Êúà",
      characteristics: {
        „Ç≥„ÇØ: 6,
        Ëã¶Âë≥: 4,
        ÈÖ∏Âë≥: 9,
        È¶ô„Çä: 8,
        Áîò„Åø: 5
      },
      description: "„ÉØ„Ç§„É≥„ÅÆ„Çà„ÅÜ„Å™Ë§áÈõë„Å™ÈÖ∏Âë≥„Å®„Éô„É™„ÉºÁ≥ª„ÅÆÈ¢®Âë≥„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„Éñ„É©„ÉÉ„ÇØ„Éô„É™„Éº", "„ÉØ„Ç§„É≥", "„Ç∑„Éà„É©„Çπ"],
      processing: "„Ç¶„Ç©„ÉÉ„Ç∑„É•„Éâ",
      icon: "üá∞üá™"
    },
    {
      name: "„Ç§„É≥„Éâ„Éç„Ç∑„Ç¢ „Éû„É≥„Éá„É™„É≥",
      region: "asia",
      country: "„Ç§„É≥„Éâ„Éç„Ç∑„Ç¢",
      altitude: "900-1,300m",
      harvest: "ÈÄöÂπ¥",
      characteristics: {
        „Ç≥„ÇØ: 9,
        Ëã¶Âë≥: 8,
        ÈÖ∏Âë≥: 2,
        È¶ô„Çä: 6,
        Áîò„Åø: 4
      },
      description: "ÈáçÂéö„Å™„Ç≥„ÇØ„Å®„Çπ„Éë„Ç§„Ç∑„Éº„Å™È¢®Âë≥„ÄÅ„Ç¢„Éº„Çπ„É™„Éº„Å™Âë≥„Çè„ÅÑ„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„Ç¢„Éº„Çπ", "„Çπ„Éë„Ç§„Çπ", "„Éè„Éº„Éñ"],
      processing: "„Ç¶„Çß„ÉÉ„Éà„Éè„É´„Éâ",
      icon: "üáÆüá©"
    },
    {
      name: "„Ç§„Ç®„É°„É≥ „É¢„Ç´ „Éû„Çø„É™",
      region: "others",
      country: "„Ç§„Ç®„É°„É≥",
      altitude: "1,500-2,100m",
      harvest: "9Êúà-12Êúà",
      characteristics: {
        „Ç≥„ÇØ: 7,
        Ëã¶Âë≥: 5,
        ÈÖ∏Âë≥: 7,
        È¶ô„Çä: 8,
        Áîò„Åø: 8
      },
      description: "‰ºùÁµ±ÁöÑ„Å™‰πæÁá•Ë£ΩÊ≥ï„Å´„Çà„ÇãÁã¨Áâπ„ÅÆ„ÉØ„Ç§„Éã„Éº„Å™È¢®Âë≥„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„Éâ„É©„Ç§„Éï„É´„Éº„ÉÑ", "„Çπ„Éë„Ç§„Çπ", "„ÉÅ„Éß„Ç≥„É¨„Éº„Éà"],
      processing: "„Éä„ÉÅ„É•„É©„É´",
      icon: "üáæüá™"
    },
    {
      name: "„Ç≥„Çπ„Çø„É™„Ç´ „Çø„É©„Çπ",
      region: "america",
      country: "„Ç≥„Çπ„Çø„É™„Ç´",
      altitude: "1,500-1,900m",
      harvest: "12Êúà-3Êúà",
      characteristics: {
        „Ç≥„ÇØ: 7,
        Ëã¶Âë≥: 5,
        ÈÖ∏Âë≥: 7,
        È¶ô„Çä: 8,
        Áîò„Åø: 7
      },
      description: "„ÇØ„É™„Éº„É≥„ÅßÊòé„Çã„ÅÑÈÖ∏Âë≥„Å®„Éè„ÉÅ„Éü„ÉÑ„ÅÆ„Çà„ÅÜ„Å™Áîò„Åø„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„Éè„ÉÅ„Éü„ÉÑ", "„Ç™„É¨„É≥„Ç∏", "„Ç≠„É£„É©„É°„É´"],
      processing: "„Éè„Éã„Éº",
      icon: "üá®üá∑"
    },
    {
      name: "„Éë„Éä„Éû „Ç≤„Ç§„Ç∑„É£",
      region: "america",
      country: "„Éë„Éä„Éû",
      altitude: "1,600-1,800m",
      harvest: "1Êúà-3Êúà",
      characteristics: {
        „Ç≥„ÇØ: 5,
        Ëã¶Âë≥: 3,
        ÈÖ∏Âë≥: 8,
        È¶ô„Çä: 10,
        Áîò„Åø: 8
      },
      description: "„Ç∏„É£„Çπ„Éü„É≥„ÇÑ„Éô„É´„Ç¨„É¢„ÉÉ„Éà„ÅÆ„Çà„ÅÜ„Å™ËèØ„ÇÑ„Åã„Å™È¶ô„Çä„Å®„ÄÅÁπäÁ¥∞„Å™Âë≥„Çè„ÅÑ„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„Ç∏„É£„Çπ„Éü„É≥", "„Éô„É´„Ç¨„É¢„ÉÉ„Éà", "ËúÇËúú"],
      processing: "„Ç¶„Ç©„ÉÉ„Ç∑„É•„Éâ",
      icon: "üáµüá¶"
    },
    {
      name: "„Çø„É≥„Ç∂„Éã„Ç¢ „Ç≠„É™„Éû„É≥„Ç∏„É£„É≠",
      region: "africa",
      country: "„Çø„É≥„Ç∂„Éã„Ç¢",
      altitude: "1,400-1,800m",
      harvest: "8Êúà-12Êúà",
      characteristics: {
        „Ç≥„ÇØ: 6,
        Ëã¶Âë≥: 4,
        ÈÖ∏Âë≥: 8,
        È¶ô„Çä: 7,
        Áîò„Åø: 6
      },
      description: "„ÉØ„Ç§„É≥„ÅÆ„Çà„ÅÜ„Å™ÈÖ∏Âë≥„Å®„Éñ„É©„ÉÉ„ÇØ„Éô„É™„Éº„ÅÆÈ¢®Âë≥„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      flavor_notes: ["„Éñ„É©„ÉÉ„ÇØ„Éô„É™„Éº", "„ÉØ„Ç§„É≥", "ÊüëÊ©ò"],
      processing: "„Ç¶„Ç©„ÉÉ„Ç∑„É•„Éâ",
      icon: "üáπüáø"
    }
  ];

  const formatDataForRadar = (coffee) => {
    return Object.entries(coffee.characteristics).map(([key, value]) => ({
      subject: key,
      value: value
    }));
  };

  const filteredCoffee = selectedRegion === 'all' 
    ? coffeeData 
    : coffeeData.filter(coffee => coffee.region === selectedRegion);

    return (
      <div style={commonStyles.pageContainer}>
        <div style={commonStyles.header}>
          <h1 style={commonStyles.pageTitle}>
            „Ç≥„Éº„Éí„ÉºË±Ü„ÅÆÁâπÊÄß
          </h1>
          
          <button onClick={onBack} style={commonStyles.backButton}>
            „Éõ„Éº„É†„Å´Êàª„Çã
          </button>
        </div>
    
        <div style={commonStyles.categoryContainer}>
          {regions.map(region => (
            <button
              key={region.id}
              onClick={() => setSelectedRegion(region.id)}
              style={commonStyles.categoryButton(selectedRegion === region.id)}
            >
              {region.name}
            </button>
          ))}
        </div>
    
        <div style={commonStyles.cardGrid}>
          {filteredCoffee.map((coffee) => (
            <div 
              key={coffee.name}
              onClick={() => setSelectedCoffee(coffee)}
              style={{
                ...commonStyles.card,
                cursor: 'pointer',
                transform: selectedCoffee?.name === coffee.name ? 'scale(1.02)' : 'scale(1)',
                boxShadow: selectedCoffee?.name === coffee.name
                  ? '0 8px 16px rgba(0,0,0,0.2)'
                  : '0 2px 4px rgba(0,0,0,0.1)',
                transition: commonStyles.transition.default,
              }}
            >
              <div style={commonStyles.cardHeader}>
                <span style={commonStyles.cardIcon}>{coffee.icon}</span>
                <h3 style={commonStyles.cardTitle}>{coffee.name}</h3>
              </div>
    
              <div style={{ marginBottom: commonStyles.spacing.xl }}>
                <p style={commonStyles.cardDescription}>{coffee.description}</p>
              </div>
    
              <div style={{ width: '100%', height: '300px' }}>
                <RadarChart
                  width={280}
                  height={280}
                  data={formatDataForRadar(coffee)}
                  margin={{ top: 20, right: 30, bottom: 20, left: 30 }}
                >
                  <PolarGrid />
                  <PolarAngleAxis
                    dataKey="subject"
                    tick={{ fill: commonStyles.colors.textSecondary, fontSize: 12 }}
                  />
                  <PolarRadiusAxis
                    angle={30}
                    domain={[0, 10]}
                    tick={{ fill: commonStyles.colors.textSecondary, fontSize: 10 }}
                  />
                  <Radar
                    name={coffee.name}
                    dataKey="value"
                    stroke={commonStyles.colors.primary}
                    fill={commonStyles.colors.primary}
                    fillOpacity={0.6}
                  />
                  <Legend wrapperStyle={{ fontSize: 12 }} />
                </RadarChart>
              </div>
            </div>
          ))}
        </div>
    
        {selectedCoffee && (
          <div style={commonStyles.detailPanel}>
            <div style={commonStyles.detailHeader}>
              <span style={commonStyles.detailIcon}>{selectedCoffee.icon}</span>
              <h2 style={commonStyles.detailTitle}>{selectedCoffee.name}</h2>
            </div>
    
            <div style={commonStyles.detailGrid}>
              <div>
                <h3 style={commonStyles.sectionTitle}>Âü∫Êú¨ÊÉÖÂ†±</h3>
                <ul style={commonStyles.list}>
                  <li>Áî£Âú∞: {selectedCoffee.country}</li>
                  <li>Ê®ôÈ´ò: {selectedCoffee.altitude}</li>
                  <li>ÂèéÁ©´ÊôÇÊúü: {selectedCoffee.harvest}</li>
                  <li>Âä†Â∑•ÊñπÊ≥ï: {selectedCoffee.processing}</li>
                </ul>
              </div>
    
              <div>
                <h3 style={commonStyles.sectionTitle}>È¢®Âë≥„Éé„Éº„Éà</h3>
                <div style={{ 
                  display: 'flex', 
                  flexWrap: 'wrap', 
                  gap: commonStyles.spacing.md 
                }}>
                  {selectedCoffee.flavor_notes.map((note, index) => (
                    <span
                      key={index}
                      style={{
                        padding: `${commonStyles.spacing.xs} ${commonStyles.spacing.lg}`,
                        backgroundColor: '#F5F5F5',
                        borderRadius: '16px',
                        fontSize: '14px',
                        color: commonStyles.colors.textSecondary
                      }}
                    >
                      {note}
                    </span>
                  ))}
                </div>
              </div>
    
              <div>
                <h3 style={commonStyles.sectionTitle}>ÁâπÂæ¥</h3>
                <p style={{ 
                  margin: 0, 
                  color: commonStyles.colors.textSecondary 
                }}>
                  {selectedCoffee.description}
                </p>
              </div>
    
              <div>
                <h3 style={commonStyles.sectionTitle}>ÁâπÊÄßÂÄ§</h3>
                <ul style={commonStyles.list}>
                  {Object.entries(selectedCoffee.characteristics).map(([key, value]) => (
                    <li key={key}>{key}: {value}/10</li>
                  ))}
                </ul>
              </div>
            </div>
          </div>
        )}
      </div>
    );
};

export default CoffeeBeanCharacteristics;