import React, { useState } from 'react';
import commonStyles from '../styles/commonStyles';

const CoffeeTypes = ({ onBack }) => {
  const [selectedType, setSelectedType] = useState(null);
  const [selectedCategory, setSelectedCategory] = useState('all');

  const categories = [
    { id: 'all', name: '„Åô„Åπ„Å¶', icon: '‚òï' },
    { id: 'black', name: '„Éñ„É©„ÉÉ„ÇØ', icon: '‚òï' },
    { id: 'milk', name: '„Éü„É´„ÇØ„Éô„Éº„Çπ', icon: 'ü•õ' },
    { id: 'arrange', name: '„Ç¢„É¨„É≥„Ç∏', icon: 'üç®' },
    { id: 'iced', name: '„Ç¢„Ç§„Çπ', icon: '‚ùÑÔ∏è' },
    { id: 'hot', name: '„Éõ„ÉÉ„Éà', icon: '‚ô®Ô∏è' }
  ];

  const coffeeTypes = [
    {
      name: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      category: ["black", "hot"],
      baseType: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      temperature: "hot",
      icon: "‚òï",
      description: "È´òÂúßÂäõ„ÅßÊäΩÂá∫„Åï„Çå„ÅüÊøÉÂéö„Å™„Ç≥„Éº„Éí„Éº„ÄÇ„ÇØ„É¨„Éû„Å®Âëº„Å∞„Çå„ÇãÁâπÂæ¥ÁöÑ„Å™Ê≥°„ÅåË°®Èù¢„Å´ÊµÆ„Åã„Å≥„Åæ„Åô„ÄÇ",
      volume: "30ml",
      intensity: 5,
      milk: 0,
      recipe: {
        coffee: "7-9g",
        water: "30ml",
        time: "25-30Áßí",
        pressure: "9bar"
      },
      characteristics: {
        body: "ÈùûÂ∏∏„Å´Âº∑„ÅÑ",
        acidity: "Êéß„Åà„ÇÅ",
        bitterness: "Âº∑„ÅÑ",
        sweetness: "ÂáùÁ∏Æ"
      }
    },
    {
      name: "„Ç¢„É°„É™„Ç´„Éº„Éé",
      category: ["black", "hot"],
      baseType: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      temperature: "hot",
      icon: "ü´ñ",
      description: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ„Å´„ÅäÊπØ„ÇíËøΩÂä†„Åó„Åü„Ç≥„Éº„Éí„Éº„ÄÇ„Åô„Å£„Åç„Çä„Å®„Åó„ÅüÂë≥„Çè„ÅÑ„ÅåÁâπÂæ¥„Åß„Åô„ÄÇ",
      volume: "120-180ml",
      intensity: 3,
      milk: 0,
      recipe: {
        coffee: "7-9gÔºà„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩÔºâ",
        water: "90-150ml",
        time: "---",
        temperature: "85-95‚ÑÉ"
      },
      characteristics: {
        body: "ËªΩ„ÇÅ",
        acidity: "„Éê„É©„É≥„Çπ",
        bitterness: "‰∏≠Á®ãÂ∫¶",
        sweetness: "Êéß„Åà„ÇÅ"
      }
    },
    {
      name: "„Ç´„Éï„Çß„É©„ÉÜ",
      category: ["milk", "hot"],
      baseType: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      temperature: "hot",
      icon: "ü•õ",
      description: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ„Å´„Çπ„ÉÅ„Éº„É†„Éü„É´„ÇØ„ÇíÂä†„Åà„ÅüÂÆöÁï™„ÅÆ„Éü„É´„ÇØ„Ç≥„Éº„Éí„Éº„ÄÇ",
      volume: "240ml",
      intensity: 3,
      milk: 4,
      recipe: {
        espresso: "30ml",
        milk: "180ml",
        foam: "Â∞ëÈáè",
        temperature: "65-70‚ÑÉ"
      },
      characteristics: {
        body: "„ÇØ„É™„Éº„Éü„Éº",
        milkiness: "Âº∑„ÅÑ",
        sweetness: "Ëá™ÁÑ∂„Å™Áîò„Åø",
        balance: "Ë™øÂíå"
      }
    },
    {
      name: "„Ç´„Éó„ÉÅ„Éº„Éé",
      category: ["milk", "hot"],
      baseType: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      temperature: "hot",
      icon: "‚òï",
      description: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ„ÄÅ„Çπ„ÉÅ„Éº„É†„Éü„É´„ÇØ„ÄÅ„Éï„Ç©„Éº„É†„Éü„É´„ÇØ„Åå1:1:1„ÅÆÂâ≤Âêà„ÅÆ„Ç§„Çø„É™„Ç¢„ÅÆÂÆöÁï™„ÄÇ",
      volume: "180ml",
      intensity: 4,
      milk: 3,
      recipe: {
        espresso: "30ml",
        milk: "60ml",
        foam: "60ml",
        temperature: "65-70‚ÑÉ"
      },
      characteristics: {
        body: "„Éê„É©„É≥„Çπ",
        milkiness: "‰∏≠Á®ãÂ∫¶",
        sweetness: "Á®ã„Çà„ÅÑ",
        texture: "„Åç„ÇÅÁ¥∞„Åã„ÅÑ"
      }
    },
    {
      name: "„Ç´„Éï„Çß„É¢„Ç´",
      category: ["arrange", "hot"],
      baseType: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      temperature: "hot",
      icon: "üç´",
      description: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ„ÄÅ„Çπ„ÉÅ„Éº„É†„Éü„É´„ÇØ„ÄÅ„ÉÅ„Éß„Ç≥„É¨„Éº„Éà„Ç∑„É≠„ÉÉ„Éó„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„ÅüÁîò„ÅÑÈ£≤„ÅøÁâ©„ÄÇ",
      volume: "240ml",
      intensity: 3,
      milk: 3,
      recipe: {
        espresso: "30ml",
        milk: "150ml",
        chocolate: "30ml",
        whipped: "„Ç™„Éó„Ç∑„Éß„É≥"
      },
      characteristics: {
        body: "„É™„ÉÉ„ÉÅ",
        sweetness: "Âº∑„ÅÑ",
        chocolate: "ÊøÉÂéö",
        creaminess: "„Å™„ÇÅ„Çâ„Åã"
      }
    },
    {
      name: "„Ç¢„Ç§„Çπ„É©„ÉÜ",
      category: ["milk", "iced"],
      baseType: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      temperature: "cold",
      icon: "üßä",
      description: "ÂÜ∑„Åü„ÅÑ„Éü„É´„ÇØ„Å´„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ„ÇíÊ≥®„ÅÑ„Å†Â§è„ÅÆÂÆöÁï™„Éâ„É™„É≥„ÇØ„ÄÇ",
      volume: "400ml",
      intensity: 3,
      milk: 4,
      recipe: {
        espresso: "30ml",
        milk: "200ml",
        ice: "ÈÅ©Èáè"
      },
      characteristics: {
        body: "„Åï„Å£„Å±„Çä",
        milkiness: "Âº∑„ÅÑ",
        refreshing: "ÁàΩ„ÇÑ„Åã",
        dilution: "ÈÅ©Â∫¶"
      }
    },
    {
      name: "„Éï„É©„ÉÉ„Éà„Éõ„ÉØ„Ç§„Éà",
      category: ["milk", "hot"],
      baseType: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      temperature: "hot",
      icon: "‚òï",
      description: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ„Å´„Éû„Ç§„ÇØ„É≠„Éï„Ç©„Éº„É†„Éü„É´„ÇØ„ÇíÂä†„Åà„Åü„ÄÅ„Ç™„Éº„Çπ„Éà„É©„É™„Ç¢Áô∫Á••„ÅÆ„Ç≥„Éº„Éí„Éº„ÄÇ",
      volume: "160ml",
      intensity: 4,
      milk: 3,
      recipe: {
        espresso: "60mlÔºà„ÉÄ„Éñ„É´Ôºâ",
        milk: "100ml",
        foam: "ÊúÄÂ∞èÈôê",
        temperature: "65-70‚ÑÉ"
      },
      characteristics: {
        body: "„Åó„Å£„Åã„Çä",
        milkiness: "Á®ã„Çà„ÅÑ",
        coffee: "Âº∑„ÅÑ",
        texture: "„Å™„ÇÅ„Çâ„Åã"
      }
    },
    {
      name: "„Ç¢„Éï„Ç©„Ç¨„Éº„Éà",
      category: ["arrange"],
      baseType: "„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ",
      temperature: "mixed",
      icon: "üç®",
      description: "„Éê„Éã„É©„Ç¢„Ç§„Çπ„ÇØ„É™„Éº„É†„Å´„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ„ÇíÊ≥®„ÅÑ„Å†„Ç§„Çø„É™„Ç¢„ÅÆ„Éá„Ç∂„Éº„Éà„Éâ„É™„É≥„ÇØ„ÄÇ",
      volume: "120ml",
      intensity: 4,
      milk: 2,
      recipe: {
        espresso: "30ml",
        icecream: "1„Çπ„ÇØ„Éº„Éó",
        temperature: "„Ç≥„É≥„Éà„É©„Çπ„Éà"
      },
      characteristics: {
        body: "„Éá„Ç∂„Éº„Éà",
        contrast: "Ê∏©ÂÜ∑",
        sweetness: "Âº∑„ÅÑ",
        creaminess: "ÊúÄÈ´ò"
      }
    },
    {
      name: "„Ç≥„Éº„É´„Éâ„Éñ„É™„É•„Éº",
      category: ["black", "iced"],
      baseType: "Ê∞¥Âá∫„Åó",
      temperature: "cold",
      icon: "‚ùÑÔ∏è",
      description: "ÂÜ∑Ê∞¥„Åß„ÇÜ„Å£„Åè„ÇäÊäΩÂá∫„Åó„Åü„ÄÅ„Åæ„Çç„ÇÑ„Åã„Å™Âë≥„Çè„ÅÑ„ÅÆ„Ç≥„Éº„Éí„Éº„ÄÇ",
      volume: "350ml",
      intensity: 2,
      milk: 0,
      recipe: {
        coffee: "100g",
        water: "1000ml",
        time: "12-24ÊôÇÈñì",
        temperature: "Â∏∏Ê∏©„ÄúÂÜ∑Ëîµ"
      },
      characteristics: {
        body: "„Å™„ÇÅ„Çâ„Åã",
        acidity: "‰Ωé„ÅÑ",
        bitterness: "Êéß„Åà„ÇÅ",
        clarity: "„ÇØ„É™„Ç¢"
      }
    },
    {
      name: "„Éã„Éà„É≠„Ç≥„Éº„É´„Éâ„Éñ„É™„É•„Éº",
      category: ["black", "iced"],
      baseType: "Ê∞¥Âá∫„Åó",
      temperature: "cold",
      icon: "üå™Ô∏è",
      description: "Á™íÁ¥†„Ç¨„Çπ„ÇíÊ≥®ÂÖ•„Åó„Åü„ÇØ„É™„Éº„Éü„Éº„Å™Âè£ÂΩì„Åü„Çä„ÅÆ„Ç≥„Éº„É´„Éâ„Éñ„É™„É•„Éº„ÄÇ",
      volume: "350ml",
      intensity: 2,
      milk: 0,
      recipe: {
        coldbrew: "350ml",
        nitrogen: "Ê≥®ÂÖ•",
        pressure: "È´òÂúß",
        temperature: "ÂÜ∑Ëîµ"
      },
      characteristics: {
        body: "„ÇØ„É™„Éº„Éü„Éº",
        texture: "„Å™„ÇÅ„Çâ„Åã",
        cascade: "Áæé„Åó„ÅÑ",
        mouthfeel: "„Ç∑„É´„Ç≠„Éº"
      }
    }
  ];

  const filteredTypes = selectedCategory === 'all'
    ? coffeeTypes
    : coffeeTypes.filter(type => type.category.includes(selectedCategory));

  const styles = {
      cardDescription: {
        margin: '0 0 16px 0',
        color: '#666',
        minHeight: '60px',
      },
      strengthContainer: {
        display: 'flex',
        flexDirection: 'column',
        gap: '8px',
      },
      strengthRow: {
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
      },
      strengthLabel: {
        fontSize: '14px',
        color: '#666',
      },
      dotsContainer: {
        display: 'flex',
        gap: '4px',
      },
      dot: (isFilled, type) => ({
        width: '12px',
        height: '12px',
        borderRadius: '50%',
        backgroundColor: isFilled 
          ? (type === 'intensity' ? '#42A5F5' : '#E0E0E0')
          : '#F5F5F5',
        border: '1px solid #999',
      }),
      detailPanel: {
        backgroundColor: 'white',
        borderRadius: '8px',
        padding: '24px',
        boxShadow: '0 4px 6px rgba(0,0,0,0.1)',
      },
      detailHeader: {
        display: 'flex',
        alignItems: 'center',
        gap: '16px',
        marginBottom: '24px',
      },
      detailIcon: {
        fontSize: '32px',
      },
      detailTitle: {
        fontSize: '24px',
        margin: 0,
        color: '#2C1810',
      },
      detailGrid: {
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
        gap: '24px',
      },
      sectionTitle: {
        color: '#2C1810',
        marginBottom: '8px',
        fontSize: '16px',
        fontWeight: 'bold',
      }
    };
  
    return (
        <div style={commonStyles.pageContainer}>
          <div style={commonStyles.header}>
            <h1 style={commonStyles.pageTitle}>„Ç≥„Éº„Éí„Éº„ÅÆÁ®ÆÈ°û</h1>
            <button onClick={onBack} style={commonStyles.backButton}>
              „Éõ„Éº„É†„Å´Êàª„Çã
            </button>
          </div>
      
          <div style={commonStyles.categoryContainer}>
            {categories.map(category => (
              <button
                key={category.id}
                style={commonStyles.categoryButton(selectedCategory === category.id)}
                onClick={() => setSelectedCategory(category.id)}
              >
                <span>{category.icon}</span>
                <span>{category.name}</span>
              </button>
            ))}
          </div>
      
          <div style={commonStyles.cardGrid}>
            {filteredTypes.map((type) => (
              <div
                key={type.name}
                onClick={() => setSelectedType(type)}
                style={{
                  ...commonStyles.card,
                  cursor: 'pointer',
                  transform: selectedType?.name === type.name ? 'scale(1.02)' : 'scale(1)',
                  boxShadow: selectedType?.name === type.name
                    ? '0 8px 16px rgba(0,0,0,0.2)'
                    : '0 2px 4px rgba(0,0,0,0.1)',
                  transition: commonStyles.transition.default,
                }}
              >
                <div style={commonStyles.cardHeader}>
                  <span style={commonStyles.cardIcon}>{type.icon}</span>
                  <h3 style={commonStyles.cardTitle}>{type.name}</h3>
                </div>
      
                <p style={commonStyles.cardDescription}>{type.description}</p>
      
                <div style={{
                  display: 'flex',
                  flexDirection: 'column',
                  gap: commonStyles.spacing.md,
                }}>
                  {/* ÊøÉ„Åï„Å®„Éü„É´„ÇØ„ÅÆË°®Á§∫ */}
                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                    <span style={{ fontSize: '14px', color: commonStyles.colors.textSecondary }}>
                      ÊøÉ„Åï {type.intensity}/5
                    </span>
                    <div style={{ display: 'flex', gap: commonStyles.spacing.xs }}>
                      {[...Array(5)].map((_, i) => (
                        <div
                          key={i}
                          style={{
                            width: '12px',
                            height: '12px',
                            borderRadius: '50%',
                            backgroundColor: i < type.intensity ? '#42A5F5' : '#F5F5F5',
                            border: '1px solid #999',
                          }}
                        />
                      ))}
                    </div>
                  </div>
                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                    <span style={{ fontSize: '14px', color: commonStyles.colors.textSecondary }}>
                      „Éü„É´„ÇØ {type.milk}/5
                    </span>
                    <div style={{ display: 'flex', gap: commonStyles.spacing.xs }}>
                      {[...Array(5)].map((_, i) => (
                        <div
                          key={i}
                          style={{
                            width: '12px',
                            height: '12px',
                            borderRadius: '50%',
                            backgroundColor: i < type.milk ? '#E0E0E0' : '#F5F5F5',
                            border: '1px solid #999',
                          }}
                        />
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
      
          {selectedType && (
            <div style={commonStyles.detailPanel}>
              <div style={commonStyles.detailHeader}>
                <span style={commonStyles.detailIcon}>{selectedType.icon}</span>
                <h2 style={commonStyles.detailTitle}>{selectedType.name}</h2>
              </div>
      
              <div style={commonStyles.detailGrid}>
                <div>
                  <h3 style={commonStyles.sectionTitle}>Âü∫Êú¨ÊÉÖÂ†±</h3>
                  <ul style={commonStyles.list}>
                    <li>„Éô„Éº„Çπ: {selectedType.baseType}</li>
                    <li>Ê∏©Â∫¶: {selectedType.temperature}</li>
                    <li>Èáè: {selectedType.volume}</li>
                  </ul>
                </div>
      
                <div>
                  <h3 style={commonStyles.sectionTitle}>„É¨„Ç∑„Éî</h3>
                  <ul style={commonStyles.list}>
                    {Object.entries(selectedType.recipe).map(([key, value]) => (
                      <li key={key}>{key}: {value}</li>
                    ))}
                  </ul>
                </div>
      
                <div>
                  <h3 style={commonStyles.sectionTitle}>ÁâπÂæ¥</h3>
                  <ul style={commonStyles.list}>
                    {Object.entries(selectedType.characteristics).map(([key, value]) => (
                      <li key={key}>{key}: {value}</li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          )}
        </div>
      );
  };
  
  export default CoffeeTypes;